from hashlib import sha256
from typing import Iterator

from odfdo import Element

from .உருப்படி import உருப்படி
from .உரை import உரை
from .நிறுத்தற்குறிகள் import சதுர_அடைப்பு, இடைவெளி
from ..வடிவம் import உரை_வடிவம், தேவையான_வடிவங்கள்
from ..மொழிபெயர்ப்பாளர்.மொழிபெயர்ப்பாளர் import மொழிபெயர்ப்பாளர்


class மொழிபெயர்க்கக்கூடிய_உரை(உருப்படி):
    def __init__(தன், உரை: str, மூல்_மொழி: str, வடிவம்: உரை_வடிவம் = None):
        super().__init__()
        தன்.உரை = உரை
        தன்.மூல்_மொழி = மூல்_மொழி
        தன்.வடிவம் = வடிவம்

        தன்.சாபி = sha256(தன்.உரை.encode("utf-8")).hexdigest()

    def மொழியாக்கத்துக்காக(தன்) -> dict[str, dict[str, str]]:
        return {தன்.மூல்_மொழி: {தன்.சாபி: தன்.உரை}}

    def உருப்படிகள்(தன், மொழி: str, மொழியாக்கம்: மொழிபெயர்ப்பாளர், வடிவங்கள்: தேவையான_வடிவங்கள்) -> Iterator["உருப்படி"]:
        மொழிபெயர்க்கப்பட்ட_உரை = மொழியாக்கம்(சாபி=தன்.உரை, மொழி=மொழி)
        if மொழிபெயர்க்கப்பட்ட_உரை:
            yield உரை(
                மொழிபெயர்க்கப்பட்ட_உரை, வடிவம்=தன்.வடிவம்
            )
        else:
            yield உரை(
                தன்.உரை, வடிவம்=தன்.வடிவம்
            )


class மொழிபெயர்ப்புடன்_உரை(மொழிபெயர்க்கக்கூடிய_உரை):
    def உருப்படிகள்(தன், மொழி: str, மொழியாக்கம்: மொழிபெயர்ப்பாளர், வடிவங்கள்: தேவையான_வடிவங்கள்) -> Iterator[Element]:
        உருப்படிகள் = [
            உரை(தன்.உரை, வடிவம்=தன்.வடிவம்)
        ]
        if மொழி != தன்.மூல்_மொழி:
            மொழிபெயர்க்கப்பட்ட_உரை = மொழியாக்கம்(சாபி=தன்.உரை, மொழி=மொழி)
            if மொழிபெயர்க்கப்பட்ட_உரை and தன்.உரை != மொழிபெயர்க்கப்பட்ட_உரை:
                மொழிபெயர்ப்பின்_வடிவம் = தன்.வடிவம்.சாய்வு()
                உருப்படிகள் += [
                    இடைவெளி(வடிவம்=தன்.வடிவம்),
                    சதுர_அடைப்பு("தொடக்கம்",வடிவம்=தன்.வடிவம்),
                    உரை(மொழிபெயர்க்கப்பட்ட_உரை, வடிவம்=மொழிபெயர்ப்பின்_வடிவம்),
                    சதுர_அடைப்பு("முடிவு", வடிவம்=தன்.வடிவம்),
                ]
        for இ in உருப்படிகள்:
            yield இ
